# -*- coding: utf-8 -*-
"""AulaDataScience.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t8FUIfVnzIMVmoo1guAit-YF4LIiOxc1
"""

import pandas as pd ##biblioteca c le arquivo e separa

uri = "https://raw.githubusercontent.com/alura-cursos/introducao-a-data-science/master/aula4.1/movies.csv"

filmes = pd.read_csv(uri) #dataframe
filmes.head() ##head imprime 5 primeiros

filmes.columns = ["filmeId", "titulo", "generos"]
filmes = filmes.set_index('filmeId')
filmes = filmes.join(filmes['generos'].str.get_dummies()).drop('generos', axis=1)
filmes['ano'] = filmes['titulo'].str.extract(r'.*\((\d+)\)')
filmes = filmes.dropna()

uri = "https://raw.githubusercontent.com/alura-cursos/introducao-a-data-science/master/aula4.1/ratings.csv"
notas = pd.read_csv(uri)
notas.head()

notas.columns = ["usuarioId", "filmeId", "nota", "momento"]
notas.head()

notas["nota"].head() #series

notas["nota"].unique() #tipos de nota

notas["nota"].mean() #media

notas["nota"].min() #nota minima

notas.describe() #estatisticas

notas["nota"].hist()

arredondadas = notas['nota'].round(1)

medias = notas.groupby ('filmeId')['nota'].mean()
filmes = filmes.join(medias).dropna().sort_values('nota', ascending=False).rename(columns={'nota':'media'})

total = notas.groupby('filmeId')['momento'].count()
filmes = filmes.join(total)
filmes = filmes.rename(columns={'momento':'total'})
filmes = filmes.query("total > 50")
##filmes['media_categoria'] = (filmes['media']).round(1).values

random_filmes = filmes.sample(10)
filmes.head()

import matplotlib.pyplot as plt
import seaborn as sns
sns.countplot(arredondadas)
plt.title("Distribuicao da Notas")

#seaborn = site de paleta para grafico

palette = sns.color_palette("Blues", 10)
sns.countplot(arredondadas, palette=palette)

sns.distplot(filmes['media']) #veria numa curva

p=sns.barplot(data=random_filmes, x = "titulo", y="media")
p.set_xticklabels(p.get_xticklabels(), rotation = 45, horizontalalignment='right')
plt.title("Notas médias de 10 filmes")
plt.ylim(2.5,4)
plt.show()

p=sns.barplot(data=random_filmes, x = "titulo", y="media")
p.set_xticklabels(p.get_xticklabels(), rotation = 45, horizontalalignment='right')
plt.title("Notas médias de 10 filmes")
plt.show()

sns.catplot(data = filmes, x= 'Action', y = "media")

sns.distplot(filmes.query("Action == 1")['media'])
sns.distplot(filmes.query("Action == 0")['media'])
##rodar teste estatistico para ver realidade

sns.boxplot(data = notas.query("filmeId in ()"))

ids_aleatorios = ",".join(random_filmes.index.values.astype(str))
query = f"filmeId in ({ids_aleatorios})"
sns.boxplot(data = notas.query(query), x = "filmeId", y = "nota")
# grafico de vela:

sns.catplot(data = filmes, x="ano", y="media", palette = sns.color_palette("Blues", 6 ))

